{"version":3,"sources":["VP2/Card.js","VP2/Cards.js","Rules.js","VP2/Wager.js","VP2/PlayArea.js","VP2/RulesArea.js","VP2/Game.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","hold","bind","this","cardSrc","alt","held","className","src","drawsLeft","onClick","disabled","Component","Cards","cards","map","card","index","image","code","value","suit","key","cardValues","JACK","QUEEN","KING","ACE","score","hand","cardVals","c","Set","forEach","add","push","size","isFlush","isStraight","sort","a","b","msg","check","shift","includes","jacksOrBetter","repeats","countRepeats","val","isTrips","isQuads","cardObj","Wager","winnings","wager","showResults","updateWager","bank","PlayArea","drawCards","newGame","reload","Rules","winningHand","Game","state","deckID","curDraw","Array","fill","numHeld","toggleHold","axios","get","init","data","deck_id","res","setState","newDraw","fullDraw","i","pop","st","setTimeout","idx","slice","updateBank","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bfc5d357.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport default class Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.hold = this.hold.bind(this);\r\n    }\r\n\r\n    hold() {\r\n        // this.setState({ held: !this.state.held });\r\n        this.props.hold();\r\n    }\r\n    render() {\r\n        const { cardSrc, alt, held } = this.props;\r\n        return (\r\n            <div className=\"Card\">\r\n                <img\r\n                    className={!held ? \"Card-img\" : \"Card-img Card-held\"}\r\n                    src={cardSrc}\r\n                    alt={alt}\r\n                />\r\n                {this.props.drawsLeft > 0 ? (\r\n                    <button className=\"Card-holdBtn\" onClick={this.hold}>\r\n                        HOLD\r\n                    </button>\r\n                ) : (\r\n                    <button className=\"Card-gameOverBtn\" disabled={true}>\r\n                        Game Over\r\n                    </button>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./Cards.css\";\r\n\r\nexport default class Cards extends Component {\r\n    render() {\r\n        const cards = this.props.cards.map((card, index) => (\r\n            <Card\r\n                hold={() => this.props.hold(index)}\r\n                held={this.props.held[index]}\r\n                drawsLeft={this.props.drawsLeft}\r\n                cardSrc={card.image}\r\n                card={card.code}\r\n                alt={`${card.value} of ${card.suit}`}\r\n                key={card.code}\r\n            />\r\n        ));\r\n        return <div className=\"Cards\">{cards}</div>;\r\n    }\r\n}\r\n","// let royal = [\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"ACE\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"KING\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"10\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"QUEEN\",\r\n//     },\r\n// ];\r\n\r\n// let straightFlush = [\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"9\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"10\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"8\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"7\",\r\n//     },\r\n// ];\r\n\r\n// const flush = [\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"2\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"5\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"QUEEN\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"7\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"ACE\",\r\n//     },\r\n// ];\r\n\r\n// const straight = [\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"6\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"9\",\r\n//     },\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"7\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"8\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"10\",\r\n//     },\r\n// ];\r\n\r\n// const onePairNotJacks = [\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"8\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"8\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"4\",\r\n//     },\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"ACE\",\r\n//     },\r\n// ];\r\n\r\n// const onePairJacks = [\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"7\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"8\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"ACE\",\r\n//     },\r\n// ];\r\n\r\n// const trips = [\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"9\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"4\",\r\n//     },\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"JACK\",\r\n//     },\r\n// ];\r\n\r\n// const twoPair = [\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"7\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"8\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"7\",\r\n//     },\r\n// ];\r\n\r\n// const quads = [\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"7\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"JACK\",\r\n//     },\r\n// ];\r\n\r\n// const fullHouse = [\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"7\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"JACK\",\r\n//     },\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"7\",\r\n//     },\r\n// ];\r\n\r\n// const nothing = [\r\n//     {\r\n//         suit: \"HEARTS\",\r\n//         value: \"7\",\r\n//     },\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"ACE\",\r\n//     },\r\n//     {\r\n//         suit: \"SPADES\",\r\n//         value: \"2\",\r\n//     },\r\n//     {\r\n//         suit: \"CLUBS\",\r\n//         value: \"KING\",\r\n//     },\r\n//     {\r\n//         suit: \"DIAMONDS\",\r\n//         value: \"6\",\r\n//     },\r\n// ];\r\n\r\nconst cardValues = {\r\n    \"2\": 2,\r\n    \"3\": 3,\r\n    \"4\": 4,\r\n    \"5\": 5,\r\n    \"6\": 6,\r\n    \"7\": 7,\r\n    \"8\": 8,\r\n    \"9\": 9,\r\n    \"10\": 10,\r\n    JACK: 11,\r\n    QUEEN: 12,\r\n    KING: 13,\r\n    ACE: 14,\r\n};\r\n\r\n// hand should be the entire curDraw array\r\n// needs an array of objects where each object is a card formatted as such:\r\n/*\r\n{\r\n    code: \"4C\",\r\n    image: \"https://...\",\r\n    suit: \"CLUBS\",\r\n    value: \"4\"\r\n}\r\n\r\n*/\r\nfunction score(hand) {\r\n    let cards = [];\r\n    let c = new Set();\r\n    // New Set containing the numerical values of each card\r\n    // New array containing only the values from the deckofcards api\r\n    hand.forEach((card) => {\r\n        c.add(cardValues[card.value]);\r\n        cards.push(cardValues[card.value]);\r\n    });\r\n\r\n    if (c.size === 5) {\r\n        if (isFlush(hand)) {\r\n            if (isStraight(cards)) {\r\n                if (highCard(cards) === 14) {\r\n                    return { score: 250, msg: \"ROYAL FLUSH\" };\r\n                } else {\r\n                    return { score: 50, msg: \"STRAIGHT FLUSH\" };\r\n                }\r\n            }\r\n            return { score: 6, msg: \"FLUSH\" };\r\n        } else if (isStraight(cards)) {\r\n            return { score: 4, msg: \"STRAIGHT\" };\r\n        }\r\n    } else if (c.size === 4) {\r\n        if (jacksOrBetter(cards)) {\r\n            return { score: 1, msg: \"ONE PAIR, JACKS OR BETTER\" };\r\n        }\r\n    } else if (c.size === 3) {\r\n        if (isTrips(cards)) {\r\n            return { score: 3, msg: \"THREE OF A KIND\" };\r\n        } else {\r\n            return { score: 2, msg: \"TWO PAIR\" };\r\n        }\r\n    } else if (c.size === 2) {\r\n        if (isQuads(cards)) {\r\n            return { score: 25, msg: \"FOUR OF A KIND\" };\r\n        } else {\r\n            return { score: 9, msg: \"FULL HOUSE\" };\r\n        }\r\n    }\r\n    return { score: 0, msg: \"GAME OVER\" };\r\n}\r\n\r\nfunction isFlush(hand) {\r\n    let c = new Set();\r\n    hand.forEach((card) => c.add(card.suit));\r\n    // c.size === 1 means any flush\r\n    return c.size === 1;\r\n}\r\n\r\nfunction isStraight(cardVals) {\r\n    cardVals.sort((a, b) => a - b);\r\n\r\n    // a straight will contain values where each successive one is 1 higher\r\n    // than the previous.  therefore, in order to be a straight,\r\n    // the last must be exactly 4 higher than the first\r\n    return cardVals[0] + 4 === cardVals[4];\r\n}\r\n\r\nfunction highCard(cardVals) {\r\n    cardVals.sort((a, b) => b - a);\r\n    return cardVals[0];\r\n}\r\n\r\nfunction jacksOrBetter(cardVals) {\r\n    let check;\r\n    do {\r\n        check = cardVals.shift();\r\n    } while (!cardVals.includes(check));\r\n    return check >= 11;\r\n}\r\n\r\nfunction isTrips(cardVals) {\r\n    let repeats = countRepeats(cardVals);\r\n    for (let val in repeats) {\r\n        if (repeats[val] === 3) {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nfunction countRepeats(cardVals) {\r\n    let cardObj = {};\r\n    cardVals.forEach((val) => {\r\n        if (!(val in cardObj)) {\r\n            cardObj[val] = 1;\r\n        } else {\r\n            cardObj[val]++;\r\n        }\r\n    });\r\n    return cardObj;\r\n}\r\n\r\nfunction isQuads(cardVals) {\r\n    let repeats = countRepeats(cardVals);\r\n    for (let val in repeats) {\r\n        if (repeats[val] === 4) {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nexport { score };\r\n","import React, { Component } from \"react\";\r\nimport \"./Wager.css\";\r\n\r\nexport default class Wager extends Component {\r\n    render() {\r\n        const {\r\n            winnings,\r\n            wager,\r\n            drawsLeft,\r\n            showResults,\r\n            updateWager,\r\n            bank,\r\n        } = this.props;\r\n        return (\r\n            <div className=\"Wager\">\r\n                {drawsLeft === 0 && showResults ? (\r\n                    winnings > 0 ? (\r\n                        <h3>You Win ${winnings}!</h3>\r\n                    ) : (\r\n                        <h3>You lose!</h3>\r\n                    )\r\n                ) : (\r\n                    <div className=\"Wager-area\">\r\n                        <h3 className=\"Wager-amount\">Wager: ${wager}</h3>\r\n                        <div className=\"Wager-buttons\">\r\n                            <button\r\n                                className=\"Wager-button\"\r\n                                disabled={wager === 1 || drawsLeft > 0}\r\n                                onClick={() => updateWager(-1)}\r\n                            >\r\n                                -\r\n                            </button>\r\n                            <button\r\n                                className=\"Wager-button\"\r\n                                disabled={\r\n                                    wager === 5 ||\r\n                                    wager === bank ||\r\n                                    drawsLeft > 0\r\n                                }\r\n                                onClick={() => updateWager(1)}\r\n                            >\r\n                                +\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport { score } from \"../Rules\";\r\nimport Wager from \"./Wager\";\r\nimport \"./PlayArea.css\";\r\n\r\nexport default class PlayArea extends Component {\r\n    render() {\r\n        const {\r\n            cards,\r\n            held,\r\n            hold,\r\n            drawsLeft,\r\n            drawCards,\r\n            newGame,\r\n            showResults,\r\n            bank,\r\n            wager,\r\n            updateWager,\r\n            winnings,\r\n            reload,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"PlayArea\">\r\n                <div className=\"PlayArea-info\">\r\n                    <h3>Bank: ${this.props.bank}</h3>\r\n                    {drawsLeft === 0 ? (\r\n                        <h3 className=\"result\">{score(cards).msg}</h3>\r\n                    ) : (\r\n                        <h3 className=\"result\">&nbsp;</h3>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"notcards\">\r\n                    {bank === 0 ? (\r\n                        <button className=\"reload-btn\" onClick={reload}>\r\n                            Reload?\r\n                        </button>\r\n                    ) : drawsLeft > 0 ? (\r\n                        <button className=\"continue-btn\" onClick={drawCards}>\r\n                            Draw!\r\n                        </button>\r\n                    ) : (\r\n                        <button className=\"continue-btn\" onClick={newGame}>\r\n                            New Game\r\n                        </button>\r\n                    )}\r\n\r\n                    <Wager\r\n                        className=\"notcards-item\"\r\n                        drawsLeft={drawsLeft}\r\n                        showResults={showResults}\r\n                        bank={bank}\r\n                        winnings={winnings}\r\n                        updateWager={updateWager}\r\n                        wager={wager}\r\n                    />\r\n                </div>\r\n\r\n                <Cards\r\n                    cards={cards}\r\n                    held={held}\r\n                    hold={hold}\r\n                    drawsLeft={drawsLeft}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./RulesArea.css\";\r\n\r\nclass Rules extends Component {\r\n    render() {\r\n        const { wager, winningHand } = this.props;\r\n        return (\r\n            <div className=\"RulesArea\">\r\n                <div className=\"row\">\r\n                    <div className=\"Rules-header\">PAYOUTS</div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`row ${\r\n                        winningHand === \"ROYAL FLUSH\" && \"winning\"\r\n                    }`}\r\n                >\r\n                    <div>Royal Flush</div>\r\n                    <div>${wager * 250}</div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`row\r\n                            ${winningHand === \"STRAIGHT FLUSH\" && \"winning\"}`}\r\n                >\r\n                    <div>Straight Flush</div>\r\n                    <div>${wager * 50}</div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`row \r\n                            ${winningHand === \"FOUR OF A KIND\" && \"winning\"}`}\r\n                >\r\n                    <div>Four of a Kind</div>\r\n                    <div>${wager * 25}</div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`row ${\r\n                        winningHand === \"FULL HOUSE\" && \"winning\"\r\n                    }`}\r\n                >\r\n                    <div>Full House</div>\r\n                    <div>${wager * 9}</div>\r\n                </div>\r\n\r\n                <div className={`row ${winningHand === \"FLUSH\" && \"winning\"}`}>\r\n                    <div>Flush</div>\r\n                    <div>${wager * 6}</div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`row ${winningHand === \"STRAIGHT\" && \"winning\"}`}\r\n                >\r\n                    <div>Straight</div>\r\n                    <div>${wager * 4}</div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`row\r\n                            ${winningHand === \"THREE OF A KIND\" && \"winning\"}`}\r\n                >\r\n                    <div>Three of a Kind</div>\r\n                    <div>${wager * 3}</div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`row ${winningHand === \"TWO PAIR\" && \"winning\"}`}\r\n                >\r\n                    <div>Two Pair</div>\r\n                    <div>${wager * 2}</div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`row ${\r\n                        winningHand === \"ONE PAIR, JACKS OR BETTER\" && \"winning\"\r\n                    }`}\r\n                >\r\n                    <div>One Pair, Jacks or Better</div>\r\n                    <div>${wager * 1}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rules;\r\n","import React, { Component } from \"react\";\r\nimport PlayArea from \"./PlayArea\";\r\nimport { score } from \"../Rules\";\r\nimport RulesArea from \"./RulesArea\";\r\nimport axios from \"axios\";\r\nimport \"./Game.css\";\r\n\r\nexport default class Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            deckID: \"\",\r\n            curDraw: [],\r\n            held: Array(5).fill(false),\r\n            numHeld: 0,\r\n            drawsLeft: 0,\r\n            bank: 200,\r\n            wager: 1,\r\n\r\n            showResults: false,\r\n        };\r\n        this.drawCards = this.drawCards.bind(this);\r\n        this.toggleHold = this.toggleHold.bind(this);\r\n        this.newGame = this.newGame.bind(this);\r\n        this.updateWager = this.updateWager.bind(this);\r\n        this.reload = this.reload.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const init = await axios.get(\r\n            \"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\"\r\n        );\r\n\r\n        const deckID = init.data.deck_id;\r\n        const res = await axios.get(\r\n            `https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=5`\r\n        );\r\n        this.setState({ deckID: deckID, curDraw: res.data.cards });\r\n    }\r\n\r\n    async newGame() {\r\n        const init = await axios.get(\r\n            \"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\"\r\n        );\r\n\r\n        const deckID = init.data.deck_id;\r\n        const res = await axios.get(\r\n            `https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=5`\r\n        );\r\n        this.setState({\r\n            deckID: deckID,\r\n            curDraw: res.data.cards,\r\n            drawsLeft: 1,\r\n            numHeld: 0,\r\n            showResults: false,\r\n            held: Array(5).fill(false),\r\n            bank: this.state.bank - this.state.wager,\r\n        });\r\n    }\r\n\r\n    async drawCards() {\r\n        const res = await axios.get(\r\n            `https://deckofcardsapi.com/api/deck/${\r\n                this.state.deckID\r\n            }/draw/?count=${5 - this.state.numHeld}`\r\n        );\r\n\r\n        const newDraw = res.data.cards;\r\n        const fullDraw = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            if (this.state.held[i]) {\r\n                fullDraw.push(null);\r\n            } else {\r\n                fullDraw.push(newDraw.pop());\r\n            }\r\n        }\r\n\r\n        this.setState((st) => ({\r\n            curDraw: st.curDraw.map((card, i) =>\r\n                st.held[i] ? card : fullDraw[i]\r\n            ),\r\n            drawsLeft: st.drawsLeft - 1,\r\n        }));\r\n\r\n        if (this.state.drawsLeft === 0) {\r\n            this.setState({\r\n                bank:\r\n                    this.state.bank +\r\n                    score(this.state.curDraw).score * this.state.wager,\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({ showResults: true });\r\n            }, 50);\r\n            setTimeout(() => {\r\n                this.setState({ showResults: false });\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    toggleHold(idx) {\r\n        this.setState((st) => ({\r\n            held: [\r\n                ...st.held.slice(0, idx),\r\n                !st.held[idx],\r\n                ...st.held.slice(idx + 1),\r\n            ],\r\n            numHeld: st.held[idx] ? st.numHeld - 1 : st.numHeld + 1,\r\n        }));\r\n    }\r\n\r\n    updateWager(val) {\r\n        this.setState({ wager: this.state.wager + val });\r\n    }\r\n\r\n    reload() {\r\n        this.setState({ bank: 200 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Game\">\r\n                <div className=\"Game-title\">\r\n                    <h1>Video Poker</h1>\r\n                </div>\r\n\r\n                <PlayArea\r\n                    showResults={this.state.showResults}\r\n                    cards={this.state.curDraw}\r\n                    held={this.state.held}\r\n                    hold={this.toggleHold}\r\n                    drawCards={this.drawCards}\r\n                    newGame={this.newGame}\r\n                    drawsLeft={this.state.drawsLeft}\r\n                    bank={this.state.bank}\r\n                    wager={this.state.wager}\r\n                    winnings={\r\n                        score(this.state.curDraw).score * this.state.wager\r\n                    }\r\n                    updateWager={this.updateWager}\r\n                    updateBank={this.updateBank}\r\n                    reload={this.reload}\r\n                />\r\n\r\n                <RulesArea\r\n                    wager={this.state.wager}\r\n                    winningHand={score(this.state.curDraw).msg}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport Game from \"./VP2/Game\";\n\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Game />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}